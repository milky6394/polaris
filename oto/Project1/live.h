#include "DxLib.h"
#define LIVE_X 625//縦何ノーツか
#define LIVE_Y 4//横何ノーツか
#define LIVE 0//何秒目から始めるか(デバッグ用)
#define VTLZ -1150//1ノーツ目の調整用
int live[LIVE_X][LIVE_Y] = {
{1,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,3},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{1,0,0,3},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{1,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,1},
{1,0,0,0},
{0,1,0,0},
{3,0,1,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{3,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{1,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,1,0},
{1,0,0,0},
{0,1,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,3,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,1},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,4,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{1,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,3},
{0,0,0,0},
{0,3,0,0},
{0,0,0,0},
{0,0,3,0},
{0,0,0,0},
{3,0,0,0},
{0,0,0,0},
{0,3,0,0},
{0,0,0,0},
{3,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{3,0,0,0},
{0,0,0,0},
{0,0,3,0},
{0,0,0,0},
{0,3,0,0},
{0,0,0,0},
{0,0,0,3},
{0,0,0,0},
{0,3,0,0},
{0,0,0,0},
{0,0,3,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{3,0,0,0},
{0,0,0,0},
{0,0,3,0},
{0,0,0,0},
{0,0,0,3},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,1},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,7,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,3,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,1,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,1},
{0,1,0,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{1,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,1},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{1,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,0,1},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,1},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,1,0,0},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{0,0,1,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,1},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{1,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,1,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,1,0},
{0,1,0,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,1},
{1,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{1,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,1},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,1},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,1,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{1,0,0,0},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,1},
{0,0,0,0},
{0,1,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,0,1,0},
{0,0,0,0},
{0,0,0,0},
{0,0,0,0},
{0,17,17,0},
};

//class Music {
//public:
//    int m;
//    int humen[3000][3000] = {};
//    Music(int music) {
//        m = music;
//    }
//    void make() {
//            for (int j = 0; j < music[m][2]; j++) {
//                for (int i = 0; i < music[m][1]; i++) {
//                    if (live[i][j] == 1) {
//                        switch (j) {
//                        case 0:
//                            bl1[i] = new Blue1(140, ((i * music[m][4]) + music[m][3] + ZURE));
//                            break;
//                        case 1:
//                            bl2[i] = new Blue2(240, ((i * music[m][4]) + music[m][3] + ZURE));
//                            break;
//                        case 2:
//                            bl3[i] = new Blue3(340, ((i * music[m][4]) + music[m][3] + ZURE));
//                            break;
//                        case 3:
//                            bl4[i] = new Blue4(440, ((i * music[m][4]) + music[m][3] + ZURE));
//                            break;
//                        }
//                    }
//                    else if (live[i][j] > 0) {
//                        switch (j) {
//                        case 0:
//                            gr1[i] = new Green1(140, (((i + live[i][j] - 1) * music[m][4])) + music[m][3] + ZURE, live[i][j], 0);
//                            break;
//                        case 1:
//                            gr2[i] = new Green2(240, (((i + live[i][j] - 1) * music[m][4])) + music[m][3] + ZURE, live[i][j], 0);
//                            break;
//                        case 2:
//                            gr3[i] = new Green3(340, (((i + live[i][j] - 1) * music[m][4])) + music[m][3] + ZURE, live[i][j], 0);
//                            break;
//                        case 3:
//                            gr4[i] = new Green4(440, (((i + live[i][j] - 1) * music[m][4])) + music[m][3] + ZURE, live[i][j], 0);
//                            break;
//                        }
//                    }
//                }
//            }
//            bl5[1] = new Blue5(140, ((171.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            bl6[0] = new Blue6(240, ((587.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            bl5[0] = new Blue5(140, ((575.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            bl7[0] = new Blue7(340, ((571.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            bl7[1] = new Blue7(340, ((603.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            bl8[0] = new Blue8(440, ((591.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            bl8[1] = new Blue8(440, ((555.5 - 6) * music[m][4]) + music[m][3] + ZURE);
//            PlaySoundMem(music[m][0], DX_PLAYTYPE_BACK, false);
//
//    }
//    void All() {
//        for (int j = 0; j < music[m][2]; j++) {
//            for (int i = 0; i < music[m][1]; i++) {
//                if (live[i][j] == 1) {
//                    switch (j) {
//                    case 0:
//                        bl1[i]->All();
//                        break;
//                    case 1:
//                        bl2[i]->All();
//                        break;
//                    case 2:
//                        bl3[i]->All();
//                        break;
//                    case 3:
//                        bl4[i]->All();
//                        break;
//                    }
//                }
//                else if (live[i][j] > 0) {
//                    switch (j) {
//                    case 0:
//                        gr1[i]->All();
//                        break;
//                    case 1:
//                        gr2[i]->All();
//                        break;
//                    case 2:
//                        gr3[i]->All();
//                        break;
//                    case 3:
//                        gr4[i]->All();
//                        break;
//                    }
//                }
//            }
//        }
//        bl5[0]->All();
//        bl5[1]->All();
//        bl6[0]->All();
//        bl7[0]->All();
//        bl7[1]->All();
//        bl8[0]->All();
//        bl8[1]->All();
//        if (gr2[music[m][1] - 1]->live == false) {
//            state = 3;
//        }
//    }
//};
